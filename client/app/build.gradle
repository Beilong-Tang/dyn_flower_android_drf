plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "flwr.android_client"
        // API level 14+ is required for TLS since Google Play Services v10.2
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                // Tell Room where to export schema so it can generate auto-migrations.
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        debug { minifyEnabled false }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }


    dataBinding {
        enabled = true
    }


    namespace 'flwr.android_client'
    lint {
        disable 'GoogleAppIndexingWarning', 'HardcodedText', 'InvalidPackage'
        textOutput file('stdout')
        textReport true
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Room.
    def room_version = "2.5.1"
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    testImplementation("androidx.room:room-testing:$room_version")

    // Local dependencies.
    implementation project(path: ':transfer_api')
    implementation project(path: ':FedCampus')

    def lifecycle_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation 'com.google.android.material:material:1.8.0'
}

//def modelUrl = 'https://www.dropbox.com/s/tubgpepk2q6xiny/models.zip?dl=1'
//def modelArchivePath = "${buildDir}/model.zip"
//def modelTargetLocation = 'src/main/assets/model'
//
//
//def dataUrl = 'https://www.dropbox.com/s/coeixr4kh8ljw6o/cifar10.zip?dl=1'
//def dataArchivePath = "${buildDir}/data.zip"
//def dataTargetLocation = 'src/main/assets/data'
//
//task downloadModelAndData(type: DefaultTask) {
//    doFirst {
//        println "Downloading and unpacking the model..."
//        mkdir project.buildDir
//    }
//
//    doLast {
//        ant.mkdir(dir: modelTargetLocation)
//        ant.mkdir(dir: dataTargetLocation)

// If you want to use your own models rather than pre-built models,
// comment out the following three lines.
//        ant.get(src: modelUrl, dest: modelArchivePath)
//        ant.unzip(src: modelArchivePath, dest: modelTargetLocation)
//        ant.delete(file: modelArchivePath)

//        ant.get(src: dataUrl, dest: dataArchivePath)
//        ant.unzip(src: dataArchivePath, dest: dataTargetLocation)
//        ant.delete(file: dataArchivePath)
//
//    }
//}

//preBuild.dependsOn downloadModelAndData
